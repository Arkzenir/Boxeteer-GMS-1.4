<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.sound = true;
global.music = true;

//Particle Initialisation
global.partSys = part_system_create();

//Music
canPlay = true;

ini_open("Savedata.ini");
if ( global.music != ini_read_real("Settings","Music",true) )
    global.music = ini_read_real("Settings","Music",true)
if ( global.sound != ini_read_real("Settings","Sound",true) )
    global.sound = ini_read_real("Settings","Sound",true)
ini_close()

musicTrack = 0

musicChoice = irandom(2);
switch (musicChoice){
    
        case(0) : 
            musicTrack = snd_game_track_1;
            alarm[0] = room_speed*audio_sound_length(musicTrack);
        break;
        
        case(1) : 
            musicTrack = snd_game_track_2;
            alarm[0] = room_speed*audio_sound_length(musicTrack);
        break;
        
        case(2) :
            musicTrack = snd_game_track_3;
            alarm[0] = room_speed*audio_sound_length(musicTrack);
        break;
}


//Menu Image
spriteChoice1 = irandom(3)
spriteChoice2 = irandom(3)
spriteChoice3 = irandom(3)
spriteChoice4 = irandom(3)
switch (spriteChoice1){
    case(0) : 
        sprite1 = spr_enemy_2
    break;
    case(1) : 
        sprite1 = spr_enemy_3
    break;
    case(2) :
        sprite1 = spr_enemy_4
    break;
    case(3) :
        sprite1 = spr_enemy_5
    break;
}

switch (spriteChoice2){
    case(0) : 
        sprite2 = spr_enemy_2
    break;
    case(1) : 
        sprite2 = spr_enemy_3
    break;
    case(2) :
        sprite2 = spr_enemy_4
    break;
    case(3) :
        sprite2 = spr_enemy_5
    break;
}

switch (spriteChoice3){
    case(0) : 
        sprite3 = spr_enemy_2
    break;
    case(1) : 
        sprite3 = spr_enemy_3
    break;
    case(2) :
        sprite3 = spr_enemy_4
    break;
    case(3) :
        sprite3 = spr_enemy_5
    break;
}

switch (spriteChoice4){
    case(0) : 
        sprite4 = spr_enemy_2
    break;
    case(1) : 
        sprite4 = spr_enemy_3
    break;
    case(2) :
        sprite4 = spr_enemy_4
    break;
    case(3) :
        sprite4 = spr_enemy_5
    break;
}

alarm[1] = room_speed*1.5;

//Font Setting
draw_set_font(fnt_no_AA);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
spriteChoice1 = irandom(3)
spriteChoice2 = irandom(3)
spriteChoice3 = irandom(3)
spriteChoice4 = irandom(3)

switch (spriteChoice1){
    case(0) : 
        sprite1 = spr_enemy_2
    break;
    case(1) : 
        sprite1 = spr_enemy_3
    break;
    case(2) :
        sprite1 = spr_enemy_4
    break;
    case(3) :
        sprite1 = spr_enemy_5
    break;
}

switch (spriteChoice2){
    case(0) : 
        sprite2 = spr_enemy_2
    break;
    case(1) : 
        sprite2 = spr_enemy_3
    break;
    case(2) :
        sprite2 = spr_enemy_4
    break;
    case(3) :
        sprite2 = spr_enemy_5
    break;
}

switch (spriteChoice3){
    case(0) : 
        sprite3 = spr_enemy_2
    break;
    case(1) : 
        sprite3 = spr_enemy_3
    break;
    case(2) :
        sprite3 = spr_enemy_4
    break;
    case(3) :
        sprite3 = spr_enemy_5
    break;
}

switch (spriteChoice4){
    case(0) : 
        sprite4 = spr_enemy_2
    break;
    case(1) : 
        sprite4 = spr_enemy_3
    break;
    case(2) :
        sprite4 = spr_enemy_4
    break;
    case(3) :
        sprite4 = spr_enemy_5
    break;
}

alarm[1] = room_speed*1.5;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canPlay = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Menu Buton Creation
if(room==1) and (!instance_exists(obj_inter_play)) event_user(0);


//Particle System Management

if(room != 2) part_system_destroy(global.partSys);

if(room == 2 || room == 4 &amp;&amp; !part_system_exists(global.partSys)) partCreate();




//Pausing Debug
if(room == 2 and keyboard_check_pressed(vk_escape)){
   global.paused = !global.paused;
}

//Pause Button
if(room == 2 and !global.paused and !instance_exists(obj_inter_pause)){
    instance_create(view_wview-(sprite_get_height(spr_inter_pause)*1.5),(sprite_get_height(spr_inter_pause)*1.5),obj_inter_pause)
}

//Exiting
if(room == 1) and keyboard_check_pressed(vk_backspace){

    game_end()

}

//Music
if(global.music){

if(room == 2) and (canPlay = false){
    
    musicChoice = irandom(2);
    switch (musicChoice){
    
        case(0) : 
            musicTrack = snd_game_track_1;
            alarm[0] = room_speed*audio_sound_length(musicTrack);
            canPlay = true
        break;
        
        case(1) : 
            musicTrack = snd_game_track_2;
            alarm[0] = room_speed*audio_sound_length(musicTrack);
            canPlay = true
        break;
        
        case(2) :
            musicTrack = snd_game_track_3;
            alarm[0] = room_speed*audio_sound_length(musicTrack);
            canPlay = true
        break;
    }
}    

if(room != 2) audio_stop_sound(musicTrack);

if(room == 2) and (canPlay = true) and !audio_is_playing(musicTrack) audio_play_sound(musicTrack,1,false)


if(room == 1) and !audio_is_playing(snd_main_menu_music){
    audio_play_sound(snd_main_menu_music,9,true)
}
if(room != 1) and (room != 5){
    audio_stop_sound(snd_main_menu_music)
}

if(room == 3) and !audio_is_playing(snd_score_screen){
    audio_play_sound(snd_score_screen,9,true)
}

if(room != 3){
    audio_stop_sound(snd_score_screen)
}

}else{
    
    audio_stop_sound(snd_main_menu_music)
    audio_stop_sound(snd_game_track_1)
    audio_stop_sound(snd_game_track_2)
    audio_stop_sound(snd_game_track_3)
    audio_stop_sound(snd_score_screen)
    
    canPlay = false;
    
}

//Death
if(lives &lt;= 0) and room == 2 {
    
    //Setting Up Variables
    var scoreLast = score;
    ini_open("Savedata.ini");
    var scoreHigh = ini_read_real("Scores","High Score",0)
    
    //Hi-Score Checking
    if(scoreLast &gt; scoreHigh){
        ini_write_real("Scores","High Score",scoreLast)
    }
    
    ini_close();
    room_goto(rm_game_over)
    
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DEBUG

if(instance_exists(obj_enemy_1)){
    if(keyboard_check(ord('Q'))){ 
    
    with(obj_enemy_1) instance_destroy()
    }
}

if(room_exists(room+1)){

    if(keyboard_check_pressed(vk_add)) room += 1;

}

if(room_exists(room-1)){

    if(keyboard_check_pressed(vk_subtract)) room -= 1;

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Menu Button Creation


instance_create(view_wview[0]/2,view_hview[0]*0.50,obj_inter_play);

instance_create(view_wview[0]/2,view_hview[0]*0.70,obj_inter_howto);

instance_create(view_wview[0]/2,view_hview[0]*0.90,obj_inter_credits);

instance_create(view_wview[0]*(7/8),view_hview[0]*(5/6),obj_inter_sound);

instance_create(view_wview[0]*(1/8),view_hview[0]*(5/6),obj_inter_music);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var scale = cont_display_manager.zoom;

if(room == 1){
draw_sprite_ext(sprite1,0,(room_width * 3/8)*scale,(room_height*0.25)*scale,2*scale,2*scale,0,c_white,1)
draw_sprite_ext(sprite2,0,(room_width * 4/8)*scale,(room_height*0.25)*scale,2*scale,2*scale,0,c_white,1)
draw_sprite_ext(sprite3,0,(room_width * 5/8)*scale,(room_height*0.25)*scale,2*scale,2*scale,0,c_white,1)
// draw_sprite_ext(sprite4,0,(room_width * 6/8)*scale,(room_height*0.25)*scale,2*scale,2*scale,0,c_white,1)



}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
