<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(-1,-1);

guiScale = cont_display_manager.zoom
spriteSpace = sprite_get_width(spr_health)*guiScale + sprite_get_width(spr_health)/8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Font Setting
draw_set_font(fnt_no_AA);

//GUI when alive
if (room = 2){
draw_set_color(c_red);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);



draw_text_transformed((sprite_get_width(spr_score) + 10)*guiScale , spriteSpace + (sprite_get_height(spr_score)/2)*guiScale, string(score),guiScale,guiScale,0);
draw_sprite_ext(spr_score,0,(sprite_get_width(spr_score)/2 + 5)*guiScale,spriteSpace + (sprite_get_height(spr_score)/2)*guiScale,guiScale,guiScale,0,c_white,1);

    if(lives &gt; 0){
    switch (lives)
    {
    case (1):
        draw_sprite_ext( spr_health, 0, spriteSpace/2, spriteSpace/2, guiScale, guiScale, 0, c_white, 1) 
        break;
    case (2):
        draw_sprite_ext( spr_health, 0, spriteSpace/2, spriteSpace/2, guiScale, guiScale, 0, c_white, 1)
        draw_sprite_ext( spr_health, 0, spriteSpace/2+spriteSpace, spriteSpace/2, guiScale, guiScale, 0, c_white, 1)
        break;
    case (3):
        draw_sprite_ext( spr_health, 0, spriteSpace/2, spriteSpace/2, guiScale, guiScale, 0, c_white, 1) 
        draw_sprite_ext( spr_health, 0, spriteSpace/2+spriteSpace, spriteSpace/2, guiScale, guiScale, 0, c_white, 1) 
        draw_sprite_ext( spr_health, 0, spriteSpace/2+spriteSpace*2, spriteSpace/2, guiScale, guiScale, 0, c_white, 1) 
        break;
    }
}

//Buckshot GUI

if(global.buckshot &gt; 0){
    
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    
    
    draw_text_transformed(window_get_width()-(string_width(string(global.buckshot))+sprite_get_width(spr_buckshot_counter)/3)*guiScale,sprite_get_height(spr_inter_pause)*3.5*guiScale,string(global.buckshot),guiScale,guiScale,0);

    draw_sprite_ext(spr_buckshot_counter,0,(window_get_width())-(string_width(string(global.buckshot))+sprite_get_width(spr_buckshot_counter))*guiScale,(sprite_get_height(spr_inter_pause)*3.5+(sprite_get_height(spr_buckshot_counter)/2))*guiScale,guiScale,guiScale,0,c_white,1);
    
}
}

//GUI when dead
if (room = 3){
draw_set_colour(c_black);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);

draw_sprite_ext(spr_score,0,(room_width/2)*guiScale - ((sprite_get_width(spr_score)/2)*guiScale + 5*guiScale) ,(room_height/2)*guiScale,guiScale,guiScale,0,c_white,1);

draw_sprite_ext(spr_high_score,0,(room_width/2)*guiScale - ((sprite_get_width(spr_high_score)/2)*guiScale + 5*guiScale) ,((room_height/2)*guiScale)-30*guiScale,guiScale,guiScale,0,c_white,1);



draw_text_transformed((room_width/2)*guiScale,(room_height/2)*guiScale,string(score),guiScale*2,guiScale*2,0);

ini_open("Savedata.ini")
scoreHigh = ini_read_real("Scores","High Score",6969696969);
ini_close();

draw_text_transformed((room_width/2)*guiScale,((room_height/2)*guiScale)-30*guiScale,string(scoreHigh),guiScale*2,guiScale*2,0);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
